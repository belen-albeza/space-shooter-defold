local SPAWN_PROBABILITY = 0.5
local SPAWN_PERIOD = 0.1
local SCREEN_WIDTH = 512
local SCREEN_HEIGHT = 512

function init(self)
	msg.post(".", "release_input_focus")
	
	self.spawn_timer = timer.repeating(SPAWN_PERIOD, function (self)
		if math.random() <= SPAWN_PROBABILITY then
			spawn_enemy(self)
		end
	end)

	self.score = 0

	msg.post("#background_music", "play_sound")
end

function final(self)
	-- cancel timers
	timer.cancel(self.spawn_timer)
	if self.delay_timer then timer.cancel(self.delay_timer) end
		
	-- stop music
	msg.post("#background_music", "stop_sound")
end

function restart_game(self)
	msg.post("main:/loader#loader", "change_scene", { scene_url = "#play_scene" })	
end

function on_message(self, message_id, message, sender)
	if message_id == hash("enemy_dead") then
		set_score(self, self.score + message.points)
	elseif message_id == hash("ship_dead") then
		start_game_over(self)		
	elseif message_id == hash("restart") then
		restart_game(self)
	end
end

function set_score(self, value)
	self.score = value
	label.set_text("#score_label", "SCORE: " .. self.score)
end

function spawn_enemy(self)
	local x = math.random(0, SCREEN_WIDTH)
	local position = vmath.vector3(x, SCREEN_HEIGHT + 32, 0)
	factory.create("#enemies_factory", position)
end

function start_game_over(self)
	self.is_game_over = true
	
	local DELAY = 1
	self.delay_timer = timer.seconds(DELAY, function (self)
		msg.post("/gameover_scene/scene#controller", "start", { score = self.score })
	end)
end
